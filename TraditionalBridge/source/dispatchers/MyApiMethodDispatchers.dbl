;;*****************************************************************************
;;
;; Title:       MyApiMethodDispatchers.dbl
;;
;; Description: Dispatcher classes for exposed methods
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Json
import Harmony.TraditionalBridge
import System.Collections
import TraditionalBridge.Models

.ifdef DBLV11
import System.Text.Json
.define JSON_ELEMENT @JsonElement
.else
.define JSON_ELEMENT @JsonValue
.endc

namespace TraditionalBridge.Dispatchers.MyApi


    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.AddTwoNumbers
    ;;; </summary>
    public class AddTwoNumbers_Dispatcher extends RoutineStub


        public method AddTwoNumbers_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN number1 d28.10)
                arg1,               d28.10
                ;;Argument 2 (REQUIRED IN number2 d28.10)
                arg2,               d28.10
                ;;Argument 3 (REQUIRED OUT result d28.10)
                arg3,               d28.10
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN number1 d28.10)

            arg1 = dispatcher.GetImplied(arguments[1])

            ;;Argument 2 (REQUIRED IN number2 d28.10)

            arg2 = dispatcher.GetImplied(arguments[2])

            ;;Argument 3 (REQUIRED OUT result d28.10)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall AddTwoNumbers(arg1,arg2,arg3)

            ;;--------------------------------------------------------------------------------
            ;;Argument 3 (REQUIRED OUT result d28.10)
            
            serializer.ArgumentData(3,arg3,FieldDataType.ImpliedDecimalField,28,10,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.CustomerAdd
    ;;; </summary>
    public class CustomerAdd_Dispatcher extends RoutineStub

        private mStrCustomerMetadata, @DataObjectMetadataBase

        public method CustomerAdd_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrCustomerMetadata = DataObjectMetadataBase.LookupType("Customer")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Customer structure @StrCustomer)
                arg1DataObject,     @DataObjectBase
                arg1,               StrCustomer
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Customer structure @StrCustomer)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrCustomerMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %CustomerAdd(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.CustomerDelete
    ;;; </summary>
    public class CustomerDelete_Dispatcher extends RoutineStub


        public method CustomerDelete_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN CustomerNumber d6)
                arg1,               d6
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN CustomerNumber d6)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %CustomerDelete(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.CustomerGet
    ;;; </summary>
    public class CustomerGet_Dispatcher extends RoutineStub

        private mStrCustomerMetadata, @DataObjectMetadataBase

        public method CustomerGet_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrCustomerMetadata = DataObjectMetadataBase.LookupType("Customer")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN CustomerNumber d6)
                arg1,               d6
                ;;Argument 2 (REQUIRED OUT Customer structure @StrCustomer)
                arg2DataObject,     @DataObjectBase
                arg2,               StrCustomer
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN CustomerNumber d6)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;Argument 2 (REQUIRED OUT Customer structure @StrCustomer)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %CustomerGet(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT Customer structure @StrCustomer)
            
            ;;Argument 2: Single StrCustomer record
            serializer.ArgumentData(2,arg2,FieldDataType.DataObjectField,161,"CUSTOMERS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.CustomerGetAll
    ;;; </summary>
    public class CustomerGetAll_Dispatcher extends RoutineStub

        private mStrCustomerMetadata, @DataObjectMetadataBase

        public method CustomerGetAll_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrCustomerMetadata = DataObjectMetadataBase.LookupType("Customer")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT Customers ArrayList collection of structure @StrCustomer returned as DataTable)
                arg1Array,          JSON_ELEMENT
                arg1,               @ArrayList
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT Customers ArrayList collection of structure @StrCustomer returned as DataTable)

            arg1 = new ArrayList()

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %CustomerGetAll(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT Customers ArrayList collection of structure @StrCustomer returned as DataTable)
            
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectCollectionField,161,"CUSTOMERS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.CustomerUpdate
    ;;; </summary>
    public class CustomerUpdate_Dispatcher extends RoutineStub

        private mStrCustomerMetadata, @DataObjectMetadataBase

        public method CustomerUpdate_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrCustomerMetadata = DataObjectMetadataBase.LookupType("Customer")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Customer structure @StrCustomer)
                arg1DataObject,     @DataObjectBase
                arg1,               StrCustomer
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Customer structure @StrCustomer)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrCustomerMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %CustomerUpdate(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.CustomerValidate
    ;;; </summary>
    public class CustomerValidate_Dispatcher extends RoutineStub

        private mStrCustomerMetadata, @DataObjectMetadataBase

        public method CustomerValidate_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrCustomerMetadata = DataObjectMetadataBase.LookupType("Customer")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT Customer structure @StrCustomer)
                arg1DataObject,     @DataObjectBase
                arg1,               StrCustomer
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT Customer structure @StrCustomer)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrCustomerMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %CustomerValidate(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT Customer structure @StrCustomer)
            
            ;;Argument 1: Single StrCustomer record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,161,"CUSTOMERS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetEnvironment
    ;;; </summary>
    public class GetEnvironment_Dispatcher extends RoutineStub


        public method GetEnvironment_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                returnValue,         STRING
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            ;;There are no inbound arguments to process

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetEnvironment()

            ;;Function return value
            serializer.ArgumentData(0,%atrim(returnValue),FieldDataType.StringField,,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetLogicalName
    ;;; </summary>
    public class GetLogicalName_Dispatcher extends RoutineStub


        public method GetLogicalName_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN LogicalName string)
                arg1,               string
                returnValue,         STRING
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN LogicalName string)

            arg1 = dispatcher.GetText(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetLogicalName(arg1)

            ;;Function return value
            serializer.ArgumentData(0,%atrim(returnValue),FieldDataType.StringField,,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.ItemAdd
    ;;; </summary>
    public class ItemAdd_Dispatcher extends RoutineStub

        private mStrItemMetadata, @DataObjectMetadataBase

        public method ItemAdd_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrItemMetadata = DataObjectMetadataBase.LookupType("Item")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Item structure @StrItem)
                arg1DataObject,     @DataObjectBase
                arg1,               StrItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Item structure @StrItem)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrItemMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %ItemAdd(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.ItemDelete
    ;;; </summary>
    public class ItemDelete_Dispatcher extends RoutineStub


        public method ItemDelete_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN ItemNumber d6)
                arg1,               d6
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN ItemNumber d6)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %ItemDelete(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.ItemGet
    ;;; </summary>
    public class ItemGet_Dispatcher extends RoutineStub

        private mStrItemMetadata, @DataObjectMetadataBase

        public method ItemGet_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrItemMetadata = DataObjectMetadataBase.LookupType("Item")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN ItemNumber d6)
                arg1,               d6
                ;;Argument 2 (REQUIRED OUT Item structure @StrItem)
                arg2DataObject,     @DataObjectBase
                arg2,               StrItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN ItemNumber d6)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;Argument 2 (REQUIRED OUT Item structure @StrItem)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %ItemGet(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT Item structure @StrItem)
            
            ;;Argument 2: Single StrItem record
            serializer.ArgumentData(2,arg2,FieldDataType.DataObjectField,151,"ITEMS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.ItemGetAll
    ;;; </summary>
    public class ItemGetAll_Dispatcher extends RoutineStub

        private mStrItemMetadata, @DataObjectMetadataBase

        public method ItemGetAll_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrItemMetadata = DataObjectMetadataBase.LookupType("Item")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT Items ArrayList collection of structure @StrItem returned as DataTable)
                arg1Array,          JSON_ELEMENT
                arg1,               @ArrayList
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT Items ArrayList collection of structure @StrItem returned as DataTable)

            arg1 = new ArrayList()

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %ItemGetAll(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT Items ArrayList collection of structure @StrItem returned as DataTable)
            
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectCollectionField,151,"ITEMS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.ItemUpdate
    ;;; </summary>
    public class ItemUpdate_Dispatcher extends RoutineStub

        private mStrItemMetadata, @DataObjectMetadataBase

        public method ItemUpdate_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrItemMetadata = DataObjectMetadataBase.LookupType("Item")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Item structure @StrItem)
                arg1DataObject,     @DataObjectBase
                arg1,               StrItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Item structure @StrItem)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrItemMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %ItemUpdate(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.ItemValidate
    ;;; </summary>
    public class ItemValidate_Dispatcher extends RoutineStub

        private mStrItemMetadata, @DataObjectMetadataBase

        public method ItemValidate_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrItemMetadata = DataObjectMetadataBase.LookupType("Item")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT Item structure @StrItem)
                arg1DataObject,     @DataObjectBase
                arg1,               StrItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT Item structure @StrItem)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrItemMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %ItemValidate(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT Item structure @StrItem)
            
            ;;Argument 1: Single StrItem record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,151,"ITEMS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.OrderAdd
    ;;; </summary>
    public class OrderAdd_Dispatcher extends RoutineStub

        private mStrOrderMetadata, @DataObjectMetadataBase

        public method OrderAdd_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrOrderMetadata = DataObjectMetadataBase.LookupType("Order")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Order structure @StrOrder)
                arg1DataObject,     @DataObjectBase
                arg1,               StrOrder
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Order structure @StrOrder)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrOrderMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %OrderAdd(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.OrderDelete
    ;;; </summary>
    public class OrderDelete_Dispatcher extends RoutineStub


        public method OrderDelete_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN OrderNumber d6)
                arg1,               d6
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN OrderNumber d6)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %OrderDelete(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.OrderGet
    ;;; </summary>
    public class OrderGet_Dispatcher extends RoutineStub

        private mStrOrderMetadata, @DataObjectMetadataBase

        public method OrderGet_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrOrderMetadata = DataObjectMetadataBase.LookupType("Order")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN OrderNumber d6)
                arg1,               d6
                ;;Argument 2 (REQUIRED OUT Order structure @StrOrder)
                arg2DataObject,     @DataObjectBase
                arg2,               StrOrder
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN OrderNumber d6)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;Argument 2 (REQUIRED OUT Order structure @StrOrder)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %OrderGet(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT Order structure @StrOrder)
            
            ;;Argument 2: Single StrOrder record
            serializer.ArgumentData(2,arg2,FieldDataType.DataObjectField,100,"ORDERS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.OrderGetAll
    ;;; </summary>
    public class OrderGetAll_Dispatcher extends RoutineStub

        private mStrOrderMetadata, @DataObjectMetadataBase

        public method OrderGetAll_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrOrderMetadata = DataObjectMetadataBase.LookupType("Order")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT Orders ArrayList collection of structure @StrOrder returned as DataTable)
                arg1Array,          JSON_ELEMENT
                arg1,               @ArrayList
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT Orders ArrayList collection of structure @StrOrder returned as DataTable)

            arg1 = new ArrayList()

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %OrderGetAll(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT Orders ArrayList collection of structure @StrOrder returned as DataTable)
            
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectCollectionField,100,"ORDERS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.OrderItemAdd
    ;;; </summary>
    public class OrderItemAdd_Dispatcher extends RoutineStub

        private mStrOrderItemMetadata, @DataObjectMetadataBase

        public method OrderItemAdd_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrOrderItemMetadata = DataObjectMetadataBase.LookupType("OrderItem")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN OrderItem structure @StrOrderItem)
                arg1DataObject,     @DataObjectBase
                arg1,               StrOrderItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN OrderItem structure @StrOrderItem)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrOrderItemMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %OrderItemAdd(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.OrderItemDelete
    ;;; </summary>
    public class OrderItemDelete_Dispatcher extends RoutineStub


        public method OrderItemDelete_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN OrderNumber d6)
                arg1,               d6
                ;;Argument 2 (REQUIRED IN ItemNumber d2)
                arg2,               d2
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN OrderNumber d6)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;Argument 2 (REQUIRED IN ItemNumber d2)

            arg2 = dispatcher.GetDecimal(arguments[2])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %OrderItemDelete(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.OrderItemGet
    ;;; </summary>
    public class OrderItemGet_Dispatcher extends RoutineStub

        private mStrOrderItemMetadata, @DataObjectMetadataBase

        public method OrderItemGet_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrOrderItemMetadata = DataObjectMetadataBase.LookupType("OrderItem")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN OrderNumber d6)
                arg1,               d6
                ;;Argument 2 (REQUIRED IN ItemNumber d2)
                arg2,               d2
                ;;Argument 3 (REQUIRED OUT OrderItem structure @StrOrderItem)
                arg3DataObject,     @DataObjectBase
                arg3,               StrOrderItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN OrderNumber d6)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;Argument 2 (REQUIRED IN ItemNumber d2)

            arg2 = dispatcher.GetDecimal(arguments[2])

            ;;Argument 3 (REQUIRED OUT OrderItem structure @StrOrderItem)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %OrderItemGet(arg1,arg2,arg3)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 3 (REQUIRED OUT OrderItem structure @StrOrderItem)
            
            ;;Argument 3: Single StrOrderItem record
            serializer.ArgumentData(3,arg3,FieldDataType.DataObjectField,100,"ORDER_ITEMS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.OrderItemGetAll
    ;;; </summary>
    public class OrderItemGetAll_Dispatcher extends RoutineStub

        private mStrOrderItemMetadata, @DataObjectMetadataBase

        public method OrderItemGetAll_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrOrderItemMetadata = DataObjectMetadataBase.LookupType("OrderItem")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN OrderNumber d6)
                arg1,               d6
                ;;Argument 2 (REQUIRED OUT OrderItems ArrayList collection of structure @StrOrderItem returned as DataTable)
                arg2Array,          JSON_ELEMENT
                arg2,               @ArrayList
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN OrderNumber d6)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;Argument 2 (REQUIRED OUT OrderItems ArrayList collection of structure @StrOrderItem returned as DataTable)

            arg2 = new ArrayList()

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %OrderItemGetAll(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT OrderItems ArrayList collection of structure @StrOrderItem returned as DataTable)
            
            serializer.ArgumentData(2,arg2,FieldDataType.DataObjectCollectionField,100,"ORDER_ITEMS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.OrderItemUpdate
    ;;; </summary>
    public class OrderItemUpdate_Dispatcher extends RoutineStub

        private mStrOrderItemMetadata, @DataObjectMetadataBase

        public method OrderItemUpdate_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrOrderItemMetadata = DataObjectMetadataBase.LookupType("OrderItem")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN OrderItem structure @StrOrderItem)
                arg1DataObject,     @DataObjectBase
                arg1,               StrOrderItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN OrderItem structure @StrOrderItem)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrOrderItemMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %OrderItemUpdate(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.OrderItemValidate
    ;;; </summary>
    public class OrderItemValidate_Dispatcher extends RoutineStub

        private mStrOrderItemMetadata, @DataObjectMetadataBase

        public method OrderItemValidate_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrOrderItemMetadata = DataObjectMetadataBase.LookupType("OrderItem")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT OrderItem structure @StrOrderItem)
                arg1DataObject,     @DataObjectBase
                arg1,               StrOrderItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT OrderItem structure @StrOrderItem)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrOrderItemMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %OrderItemValidate(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT OrderItem structure @StrOrderItem)
            
            ;;Argument 1: Single StrOrderItem record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,100,"ORDER_ITEMS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.OrderUpdate
    ;;; </summary>
    public class OrderUpdate_Dispatcher extends RoutineStub

        private mStrOrderMetadata, @DataObjectMetadataBase

        public method OrderUpdate_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrOrderMetadata = DataObjectMetadataBase.LookupType("Order")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Order structure @StrOrder)
                arg1DataObject,     @DataObjectBase
                arg1,               StrOrder
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Order structure @StrOrder)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrOrderMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %OrderUpdate(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.OrderValidate
    ;;; </summary>
    public class OrderValidate_Dispatcher extends RoutineStub

        private mStrOrderMetadata, @DataObjectMetadataBase

        public method OrderValidate_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrOrderMetadata = DataObjectMetadataBase.LookupType("Order")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT Order structure @StrOrder)
                arg1DataObject,     @DataObjectBase
                arg1,               StrOrder
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT Order structure @StrOrder)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrOrderMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %OrderValidate(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT Order structure @StrOrder)
            
            ;;Argument 1: Single StrOrder record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,100,"ORDERS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.VendorAdd
    ;;; </summary>
    public class VendorAdd_Dispatcher extends RoutineStub

        private mStrVendorMetadata, @DataObjectMetadataBase

        public method VendorAdd_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrVendorMetadata = DataObjectMetadataBase.LookupType("Vendor")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Vendor structure @StrVendor)
                arg1DataObject,     @DataObjectBase
                arg1,               StrVendor
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Vendor structure @StrVendor)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrVendorMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %VendorAdd(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.VendorDelete
    ;;; </summary>
    public class VendorDelete_Dispatcher extends RoutineStub


        public method VendorDelete_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN VendorNumber d6)
                arg1,               d6
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN VendorNumber d6)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %VendorDelete(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.VendorGet
    ;;; </summary>
    public class VendorGet_Dispatcher extends RoutineStub

        private mStrVendorMetadata, @DataObjectMetadataBase

        public method VendorGet_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrVendorMetadata = DataObjectMetadataBase.LookupType("Vendor")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN VendorNumber d6)
                arg1,               d6
                ;;Argument 2 (REQUIRED OUT Vendor structure @StrVendor)
                arg2DataObject,     @DataObjectBase
                arg2,               StrVendor
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN VendorNumber d6)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;Argument 2 (REQUIRED OUT Vendor structure @StrVendor)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %VendorGet(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT Vendor structure @StrVendor)
            
            ;;Argument 2: Single StrVendor record
            serializer.ArgumentData(2,arg2,FieldDataType.DataObjectField,135,"VENDORS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.VendorGetAll
    ;;; </summary>
    public class VendorGetAll_Dispatcher extends RoutineStub

        private mStrVendorMetadata, @DataObjectMetadataBase

        public method VendorGetAll_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrVendorMetadata = DataObjectMetadataBase.LookupType("Vendor")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT Vendors ArrayList collection of structure @StrVendor returned as DataTable)
                arg1Array,          JSON_ELEMENT
                arg1,               @ArrayList
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT Vendors ArrayList collection of structure @StrVendor returned as DataTable)

            arg1 = new ArrayList()

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %VendorGetAll(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT Vendors ArrayList collection of structure @StrVendor returned as DataTable)
            
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectCollectionField,135,"VENDORS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.VendorUpdate
    ;;; </summary>
    public class VendorUpdate_Dispatcher extends RoutineStub

        private mStrVendorMetadata, @DataObjectMetadataBase

        public method VendorUpdate_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrVendorMetadata = DataObjectMetadataBase.LookupType("Vendor")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Vendor structure @StrVendor)
                arg1DataObject,     @DataObjectBase
                arg1,               StrVendor
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Vendor structure @StrVendor)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrVendorMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %VendorUpdate(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.VendorValidate
    ;;; </summary>
    public class VendorValidate_Dispatcher extends RoutineStub

        private mStrVendorMetadata, @DataObjectMetadataBase

        public method VendorValidate_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrVendorMetadata = DataObjectMetadataBase.LookupType("Vendor")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT Vendor structure @StrVendor)
                arg1DataObject,     @DataObjectBase
                arg1,               StrVendor
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT Vendor structure @StrVendor)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrVendorMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %VendorValidate(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT Vendor structure @StrVendor)
            
            ;;Argument 1: Single StrVendor record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,135,"VENDORS",true)
        endmethod

    endclass

endnamespace

;; This is here to ensure that the TraditionalBridge.Models namespace exists.
;; If the Synergy methods don't expsoe any structure or collection of structure
;; parameters then there won't be anything in the Models folder, and the import above will fail.
namespace TraditionalBridge.Models
    public class MyApiDummyModel
    endclass
endnamespace

