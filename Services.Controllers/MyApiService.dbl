;;*****************************************************************************
;;
;; Title:       MyApiService.dbl
;;
;; Description: Service to expose methods that are part of the former
;;              xfServerPlus / xfNetLink "MyApi" interface.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Harmony.Core
import Harmony.Core.Context
import Harmony.Core.Interface
import Harmony.Core.EF.Extensions
import Harmony.OData
import Harmony.OData.Adapter
import System.Threading.Tasks
import System
import System.Collections.Generic
import System.Text
import Microsoft.AspNetCore.Mvc
import Microsoft.AspNetCore.Authorization
import Newtonsoft.Json.Linq
import System.Linq

import Services.Models

namespace Services.Controllers

    public partial class MyApiService extends DynamicCallProvider

        static IsInitialized, boolean
        static method MyApiService
        proc
            DataObjectMetadataBase.LookupType(^typeof(Customer))
            DataObjectMetadataBase.LookupType(^typeof(Customer))
            DataObjectMetadataBase.LookupType(^typeof(Customer))
            DataObjectMetadataBase.LookupType(^typeof(Customer))
            DataObjectMetadataBase.LookupType(^typeof(Customer))
            DataObjectMetadataBase.LookupType(^typeof(Item))
            DataObjectMetadataBase.LookupType(^typeof(Item))
            DataObjectMetadataBase.LookupType(^typeof(Item))
            DataObjectMetadataBase.LookupType(^typeof(Item))
            DataObjectMetadataBase.LookupType(^typeof(Item))
            DataObjectMetadataBase.LookupType(^typeof(Order))
            DataObjectMetadataBase.LookupType(^typeof(Order))
            DataObjectMetadataBase.LookupType(^typeof(Order))
            DataObjectMetadataBase.LookupType(^typeof(OrderItem))
            DataObjectMetadataBase.LookupType(^typeof(OrderItem))
            DataObjectMetadataBase.LookupType(^typeof(OrderItem))
            DataObjectMetadataBase.LookupType(^typeof(OrderItem))
            DataObjectMetadataBase.LookupType(^typeof(OrderItem))
            DataObjectMetadataBase.LookupType(^typeof(Order))
            DataObjectMetadataBase.LookupType(^typeof(Order))
            DataObjectMetadataBase.LookupType(^typeof(Vendor))
            DataObjectMetadataBase.LookupType(^typeof(Vendor))
            DataObjectMetadataBase.LookupType(^typeof(Vendor))
            DataObjectMetadataBase.LookupType(^typeof(Vendor))
            DataObjectMetadataBase.LookupType(^typeof(Vendor))
            IsInitialized = true
        endmethod

        ;;; <summary>
        ;;; Constructor
        ;;; </summary>
        public method MyApiService
            connection, @IDynamicCallConnection
            endparams
            parent(connection)
        proc
            if(!IsInitialized)
                throw new Exception("cctor missing")
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method AddTwoNumbers, @Task<MyApi.AddTwoNumbers_Response>
            required in args, @MyApi.AddTwoNumbers_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.AddTwoNumbers_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("AddTwoNumbers"
            &   ,args.number1
            &   ,args.number2
            &   ,response.result
            &   )

            ArgumentHelper.Argument(3, resultTuple, response.result)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method CustomerAdd, @Task<MyApi.CustomerAdd_Response>
            required in args, @MyApi.CustomerAdd_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.CustomerAdd_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("CustomerAdd"
            &   ,args.Customer
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method CustomerDelete, @Task<MyApi.CustomerDelete_Response>
            required in args, @MyApi.CustomerDelete_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.CustomerDelete_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("CustomerDelete"
            &   ,args.CustomerNumber
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method CustomerGet, @Task<MyApi.CustomerGet_Response>
            required in args, @MyApi.CustomerGet_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.CustomerGet_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("CustomerGet"
            &   ,args.CustomerNumber
            &   ,ArgumentHelper.MaybeNull(response.Customer)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(2, resultTuple, response.Customer)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method CustomerGetAll, @Task<MyApi.CustomerGetAll_Response>
        proc
            ;;Prepare the response object
            data response = new MyApi.CustomerGetAll_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("CustomerGetAll"
            &   ,ArgumentHelper.MaybeNull(response.Customers)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(1, resultTuple, response.Customers)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method CustomerUpdate, @Task<MyApi.CustomerUpdate_Response>
            required in args, @MyApi.CustomerUpdate_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.CustomerUpdate_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("CustomerUpdate"
            &   ,args.Customer
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method CustomerValidate, @Task<MyApi.CustomerValidate_Response>
            required in args, @MyApi.CustomerValidate_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.CustomerValidate_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("CustomerValidate"
            &   ,args.Customer
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(1, resultTuple, response.Customer)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method GetEnvironment, @Task<MyApi.GetEnvironment_Response>
        proc
            ;;Prepare the response object
            data response = new MyApi.GetEnvironment_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("GetEnvironment"
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method GetLogicalName, @Task<MyApi.GetLogicalName_Response>
            required in args, @MyApi.GetLogicalName_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.GetLogicalName_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("GetLogicalName"
            &   ,args.LogicalName
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method ItemAdd, @Task<MyApi.ItemAdd_Response>
            required in args, @MyApi.ItemAdd_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.ItemAdd_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("ItemAdd"
            &   ,args.Item
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method ItemDelete, @Task<MyApi.ItemDelete_Response>
            required in args, @MyApi.ItemDelete_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.ItemDelete_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("ItemDelete"
            &   ,args.ItemNumber
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method ItemGet, @Task<MyApi.ItemGet_Response>
            required in args, @MyApi.ItemGet_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.ItemGet_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("ItemGet"
            &   ,args.ItemNumber
            &   ,ArgumentHelper.MaybeNull(response.Item)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(2, resultTuple, response.Item)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method ItemGetAll, @Task<MyApi.ItemGetAll_Response>
        proc
            ;;Prepare the response object
            data response = new MyApi.ItemGetAll_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("ItemGetAll"
            &   ,ArgumentHelper.MaybeNull(response.Items)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(1, resultTuple, response.Items)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method ItemUpdate, @Task<MyApi.ItemUpdate_Response>
            required in args, @MyApi.ItemUpdate_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.ItemUpdate_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("ItemUpdate"
            &   ,args.Item
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method ItemValidate, @Task<MyApi.ItemValidate_Response>
            required in args, @MyApi.ItemValidate_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.ItemValidate_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("ItemValidate"
            &   ,args.Item
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(1, resultTuple, response.Item)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method OrderAdd, @Task<MyApi.OrderAdd_Response>
            required in args, @MyApi.OrderAdd_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.OrderAdd_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("OrderAdd"
            &   ,args.Order
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method OrderDelete, @Task<MyApi.OrderDelete_Response>
            required in args, @MyApi.OrderDelete_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.OrderDelete_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("OrderDelete"
            &   ,args.OrderNumber
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method OrderGet, @Task<MyApi.OrderGet_Response>
            required in args, @MyApi.OrderGet_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.OrderGet_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("OrderGet"
            &   ,args.OrderNumber
            &   ,ArgumentHelper.MaybeNull(response.Order)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(2, resultTuple, response.Order)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method OrderGetAll, @Task<MyApi.OrderGetAll_Response>
        proc
            ;;Prepare the response object
            data response = new MyApi.OrderGetAll_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("OrderGetAll"
            &   ,ArgumentHelper.MaybeNull(response.Orders)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(1, resultTuple, response.Orders)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method OrderItemAdd, @Task<MyApi.OrderItemAdd_Response>
            required in args, @MyApi.OrderItemAdd_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.OrderItemAdd_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("OrderItemAdd"
            &   ,args.OrderItem
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method OrderItemDelete, @Task<MyApi.OrderItemDelete_Response>
            required in args, @MyApi.OrderItemDelete_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.OrderItemDelete_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("OrderItemDelete"
            &   ,args.OrderNumber
            &   ,args.ItemNumber
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method OrderItemGet, @Task<MyApi.OrderItemGet_Response>
            required in args, @MyApi.OrderItemGet_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.OrderItemGet_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("OrderItemGet"
            &   ,args.OrderNumber
            &   ,args.ItemNumber
            &   ,ArgumentHelper.MaybeNull(response.OrderItem)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(3, resultTuple, response.OrderItem)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method OrderItemGetAll, @Task<MyApi.OrderItemGetAll_Response>
            required in args, @MyApi.OrderItemGetAll_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.OrderItemGetAll_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("OrderItemGetAll"
            &   ,args.OrderNumber
            &   ,ArgumentHelper.MaybeNull(response.OrderItems)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(2, resultTuple, response.OrderItems)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method OrderItemUpdate, @Task<MyApi.OrderItemUpdate_Response>
            required in args, @MyApi.OrderItemUpdate_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.OrderItemUpdate_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("OrderItemUpdate"
            &   ,args.OrderItem
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method OrderItemValidate, @Task<MyApi.OrderItemValidate_Response>
            required in args, @MyApi.OrderItemValidate_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.OrderItemValidate_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("OrderItemValidate"
            &   ,args.OrderItem
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(1, resultTuple, response.OrderItem)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method OrderUpdate, @Task<MyApi.OrderUpdate_Response>
            required in args, @MyApi.OrderUpdate_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.OrderUpdate_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("OrderUpdate"
            &   ,args.Order
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method OrderValidate, @Task<MyApi.OrderValidate_Response>
            required in args, @MyApi.OrderValidate_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.OrderValidate_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("OrderValidate"
            &   ,args.Order
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(1, resultTuple, response.Order)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method VendorAdd, @Task<MyApi.VendorAdd_Response>
            required in args, @MyApi.VendorAdd_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.VendorAdd_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("VendorAdd"
            &   ,args.Vendor
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method VendorDelete, @Task<MyApi.VendorDelete_Response>
            required in args, @MyApi.VendorDelete_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.VendorDelete_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("VendorDelete"
            &   ,args.VendorNumber
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method VendorGet, @Task<MyApi.VendorGet_Response>
            required in args, @MyApi.VendorGet_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.VendorGet_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("VendorGet"
            &   ,args.VendorNumber
            &   ,ArgumentHelper.MaybeNull(response.Vendor)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(2, resultTuple, response.Vendor)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method VendorGetAll, @Task<MyApi.VendorGetAll_Response>
        proc
            ;;Prepare the response object
            data response = new MyApi.VendorGetAll_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("VendorGetAll"
            &   ,ArgumentHelper.MaybeNull(response.Vendors)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(1, resultTuple, response.Vendors)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method VendorUpdate, @Task<MyApi.VendorUpdate_Response>
            required in args, @MyApi.VendorUpdate_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.VendorUpdate_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("VendorUpdate"
            &   ,args.Vendor
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method VendorValidate, @Task<MyApi.VendorValidate_Response>
            required in args, @MyApi.VendorValidate_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.VendorValidate_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("VendorValidate"
            &   ,args.Vendor
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(1, resultTuple, response.Vendor)

            ;;Return the response
            mreturn response

        endmethod

    endclass

endnamespace
